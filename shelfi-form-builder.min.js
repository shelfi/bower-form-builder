"use strict";angular.module("shelfiFormBuilder",[]).config(["sfFormBuilderProvider",function(t){t.add("row",'<div layout="column"><div ng-repeat="item in structure"><sf-form-builder structure="item" ng-model="data" form="form"></sf-form-builder></div></div>'),t.add("column",'<div layout="row"><div ng-repeat="item in structure"><sf-form-builder structure="item" ng-model="data" form="form"></sf-form-builder></div></div>'),t.add("inputContainer",'<md-input-container><label>{{ label }}</label><sf-input attrs="input" ng-model="data" form="form"></sf-input></md-input-container>'),t.add("lines",'<div><h2>{{ title }}</h2><sf-form-builder ng-repeat="item in data[items]" structure="repeat" ng-model="item" form="form"></sf-form-builder><md-button ng-click="add()">Add</md-button><md-button ng-click="removeAll()">Remove all</md-button></div>')}]).provider("sfFormBuilder",function(){var t={};this.add=function(e,n){t[e]=n},this.$get=["$templateCache",function(e){return{getTemplate:function(n){var a=t[n];if(!a&&(a=e.get(n),!a)){if(/<[a-z][\s\S]*>/i.test(n))return n;throw"Error: Template not found! Template name: "+n}return a}}}]}).directive("sfFormBuilder",["$compile","sfFormBuilder",function(t,e){return{restrict:"E",scope:{structure:"=",data:"=ngModel",form:"=",live:"@"},link:function(n,a){var r=function(r,i){if(angular.isObject(i)){var u='<sf-input attrs="structure" ng-model="data" form="form"></sf-input>';"input"!==r&&(u=e.getTemplate(r));var d=n.$new(!0);angular.forEach(i,function(t,e){d[e]=t}),d.structure=i,d.data=n.data,n.$watch("data",function(t){d.data=t},!0),d.form=n.form,"lines"===r&&(d.add=function(){d.data[i.items].push({})},d.removeAll=function(){d.data[i.items]=[]},d.remove=function(t){d.data[i.items].splice(t,1)});var o=angular.element(u);a.append(o),t(o)(d)}},i=function(){a.html(""),angular.forEach(n.structure,function(t,e){angular.isArray(t)&&"row"!==e&&"column"!==e?angular.forEach(t,function(t){r(e,t)}):r(e,t)})};n.live||(n.live="false"),"true"===n.live?n.$watch("structure",function(){i()},!0):i()}}}]),angular.module("shelfiFormBuilder").config(["sfInputProvider",function(t){t.add("text",'<input type="text">'),t.add("hidden",'<input type="hidden">'),t.add("password",'<input type="password">'),t.add("checkbox",'<input type="checkbox">'),t.add("file",'<input type="file">'),t.add("email",'<input type="email">'),t.add("date",'<input type="date">'),t.add("datetime",'<input type="datetime">'),t.add("datetimeLocal",'<input type="datetime-local">'),t.add("month",'<input type="month">'),t.add("number",'<input type="number">'),t.add("range",'<input type="range">'),t.add("search",'<input type="search">'),t.add("tel",'<input type="tel">'),t.add("time",'<input type="time">'),t.add("url",'<input type="url">'),t.add("week",'<input type="week">'),t.add("color",'<input type="color">'),t.add("textarea","<textarea></textarea>"),t.add("radio",'<input type="radio">'),t.add("select","<select></select>")}]).provider("sfInput",function(){var t={};this.add=function(e,n){t[e]=n},this.$get=function(){return{getTemplate:function(e){if(!t[e])throw"Error: Input not found! Input name: "+e;return t[e]},getElement:function(t){var e=this.getTemplate(t.type),n=angular.element("<div />"),a=angular.element(e);return angular.forEach(t,function(t,e){-1===["type","multi"].indexOf(e)&&(angular.isString(t)||angular.isFunction(t))&&a.attr(e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),angular.isFunction(t)?"event_"+e+"()":t)}),n.append(a),t.validationTexts&&angular.forEach(t.validationTexts,function(e,a){var r=angular.element("<code />");r.attr("ng-show","form."+t.name+".$error."+a),r.html('{{ "'+e+'" }}'),n.append(r)}),{multi:!1,element:n.children()}}}}}).directive("sfInput",["$compile","sfInput",function(t,e){return{restrict:"E",scope:{attrs:"=",data:"=ngModel",form:"="},link:function(n,a){angular.forEach(n.attrs,function(t,e){angular.isFunction(t)&&(n["event_"+e]=t)});var r=e.getElement(n.attrs);a.replaceWith(r.element),t(r.element)(n)}}}]);